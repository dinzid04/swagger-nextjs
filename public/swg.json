{
  "openapi": "3.0.0",
  "info": {
    "version": "nextjs",
    "title": "Shiina-Api's",
    "description": "Hello World",
    "contact": {
      "name": "Source Code",
      "url": "https://github.com/balxz/swagger-nextjs"
    }
  },
  "paths": {
    
  "/api/ai/gpt4o": {
    "get": {
      "summary": "GPT-4o Vision with Image URL",
      "description": "Analyze image from URL using GPT-4o vision model",
      "tags": ["AI"],
      "parameters": [
        {
          "name": "text",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Question or prompt for the image",
          "example": "jelaskan foto apa ini"
        },
        {
          "name": "systemPrompt",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "default": "you are a helpful assistant"
          },
          "description": "System prompt for AI personality",
          "example": "you are a happy, name you adalah yoimiya"
        },
        {
          "name": "imageUrl",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "format": "url"
          },
          "description": "Image URL to analyze",
          "example": "https://example.com/image.jpg"
        },
        {
          "name": "sessionId",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "default": "neko"
          },
          "description": "Session ID",
          "example": "neko"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean",
                        "example": true
                      },
                      "result": {
                        "type": "string",
                        "example": "Foto ini menampilkan seseorang yang sedang berdiri di tepi jalan..."
                      }
                    }
                  },
                  "sessionId": {
                    "type": "string",
                    "example": "neko"
                  }
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "GPT-4o Vision with File Upload",
      "description": "Upload image and analyze using GPT-4o vision model",
      "tags": ["AI"],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Question or prompt for the image",
                  "example": "jelaskan foto apa ini"
                },
                "systemPrompt": {
                  "type": "string",
                  "description": "System prompt for AI personality",
                  "example": "you are a happy, name you adalah yoimiya"
                },
                "sessionId": {
                  "type": "string",
                  "description": "Session ID",
                  "example": "neko"
                },
                "image": {
                  "type": "string",
                  "format": "binary",
                  "description": "Image file to upload and analyze"
                }
              },
              "required": ["text"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object"
                  },
                  "uploadInfo": {
                    "type": "object",
                    "properties": {
                      "cdnUrl": {
                        "type": "string",
                        "example": "https://tmpfiles.org/123456/image.jpg"
                      },
                      "provider": {
                        "type": "string",
                        "example": "tmpfiles.org"
                      }
                    }
                  },
                  "sessionId": {
                    "type": "string",
                    "example": "neko"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
    "/api/ai/nano-banana": {
      "get": {
        "summary": "Nano Banana AI Image Editor",
        "description": "Edit gambar menggunakan AI Nano Banana dengan URL gambar eksternal",
        "tags": [
          "AI Image Editor"
        ],
        "parameters": [
          {
            "name": "prompt",
            "in": "query",
            "description": "Prompt untuk edit gambar (contoh: Change the color of black)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Change the color of black"
            }
          },
          {
            "name": "imageUrl",
            "in": "query",
            "description": "URL gambar eksternal yang akan di-edit",
            "required": true,
            "schema": {
              "type": "string",
              "example": "https://raw.githubusercontent.com/DinzID/nyoba/main/images/image_1757710705910_92221b.jpg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "result": {
                      "type": "string",
                      "example": "https://tmpfiles.org/dl/2336137/1759017881196.jpg"
                    }
                  }
                },
                "example": {
                  "status": true,
                  "result": "https://tmpfiles.org/dl/2336137/1759017881196.jpg"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Parameter tidak lengkap",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Parameter prompt dan imageUrl diperlukan"
                    }
                  }
                },
                "example": {
                  "status": false,
                  "message": "Parameter prompt dan imageUrl diperlukan"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Gagal memproses gambar"
                    }
                  }
                },
                "example": {
                  "status": false,
                  "message": "Gagal memproses gambar"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Nano Banana AI Image Editor dengan Upload File",
        "description": "Edit gambar menggunakan AI Nano Banana dengan upload file langsung",
        "tags": [
          "AI Image Editor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "Prompt untuk edit gambar",
                    "example": "Change the color of black"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "File gambar (jpg, png, jpeg)"
                  }
                },
                "required": [
                  "prompt",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "result": {
                      "type": "string",
                      "example": "https://tmpfiles.org/dl/2336137/1759017881196.jpg"
                    },
                    "originalUpload": {
                      "type": "string",
                      "example": "https://tmpfiles.org/2336137/uploaded_image.jpg"
                    }
                  }
                },
                "example": {
                  "status": true,
                  "result": "https://tmpfiles.org/dl/2336137/1759017881196.jpg",
                  "originalUpload": "https://tmpfiles.org/2336137/uploaded_image.jpg"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Data tidak lengkap",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Prompt dan file gambar diperlukan"
                    }
                  }
                },
                "example": {
                  "status": false,
                  "message": "Prompt dan file gambar diperlukan"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Gagal memproses gambar"
                    }
                  }
                },
                "example": {
                  "status": false,
                  "message": "Gagal memproses gambar"
                }
              }
            }
          }
        }
      }
    },
    
    "/api/openai/gpt4-pro": {
      "get": {
        "summary": "GPT-4 Pro",
        "description": "Gpt 4o Pro",
        "tags": [
          "Openai"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Try Say Hello Gpt!",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Hello Gpt!"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "parameter format not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    
  "/api/anime/mal": {
    "get": {
      "summary": "MyAnimeList API",
      "description": "Various MyAnimeList data including top anime, seasonal anime, search, and details",
      "tags": ["Anime"],
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": [
              "top-anime",
              "seasonal-anime", 
              "search-anime",
              "search-manga",
              "search-character",
              "anime-detail",
              "manga-detail",
              "character-detail"
            ]
          },
          "description": "Action to perform"
        },
        {
          "name": "season",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["fall", "spring", "winter", "summer"]
          },
          "description": "Season for seasonal-anime (required when action=seasonal-anime)"
        },
        {
          "name": "type",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["tv-new", "tv-continuing", "ona", "ova", "movie", "special"]
          },
          "description": "Type for seasonal-anime (required when action=seasonal-anime)"
        },
        {
          "name": "query",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search query (required for search actions)"
        },
        {
          "name": "url",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "URL for detail actions (required for detail actions)"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  
  "/api/iloveimg/upscale": {
    "get": {
      "summary": "Upscale Image from URL",
      "description": "Upscale an image by providing its URL. Increases resolution by 2x or 4x.",
      "tags": ["Image Processing"],
      "parameters": [
        {
          "name": "image",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "format": "url"
          },
          "description": "Image URL to upscale",
          "example": "https://example.com/image.jpg"
        },
        {
          "name": "scale",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "enum": [2, 4],
            "default": 2
          },
          "description": "Upscale factor",
          "example": 2
        }
      ],
      "responses": {
        "200": {
          "description": "Success - Returns upscaled image",
          "content": {
            "image/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "post": {
      "summary": "Upscale Image from File Upload",
      "description": "Upscale an image by uploading a file. Increases resolution by 2x or 4x.",
      "tags": ["Image Processing"],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "format": "binary",
                  "description": "Image file to upscale"
                },
                "scale": {
                  "type": "integer",
                  "enum": [2, 4],
                  "default": 2,
                  "description": "Upscale factor"
                }
              },
              "required": ["image"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success - Returns upscaled image",
          "content": {
            "image/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
    


  "/api/maker/iqc": {
    "get": {
      "summary": "iPhone Quoted Creator",
      "description": "Generate iPhone-style quoted message image and upload to CDN",
      "tags": ["Maker"],
      "parameters": [
        {
          "name": "text",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Message text to display in iPhone quote",
          "example": "Biji ayam"
        }
      ],
      "responses": {
        "200": {
          "description": "Success - Returns CDN URL",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "iPhone quoted image generated successfully"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "example": "https://tmpfiles.org/123456/iphone-quoted.jpg"
                      },
                      "text": {
                        "type": "string",
                        "example": "Biji ayam"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "info": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "example": "14:30"
                          },
                          "battery": {
                            "type": "string",
                            "example": "75%"
                          },
                          "carrier": {
                            "type": "string",
                            "example": "INDOSAT"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "status": true,
                "message": "iPhone quoted image generated successfully",
                "data": {
                  "url": "https://tmpfiles.org/123456/iphone-quoted.jpg",
                  "text": "Biji ayam",
                  "timestamp": "2024-01-01T14:30:00.000Z",
                  "info": {
                    "time": "14:30",
                    "battery": "75%",
                    "carrier": "INDOSAT"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "post": {
      "summary": "iPhone Quoted Creator (POST)",
      "description": "Generate iPhone-style quoted message image and return directly",
      "tags": ["Maker"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Message text to display in iPhone quote",
                  "example": "Biji ayam"
                }
              },
              "required": ["text"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success - Returns image directly",
          "content": {
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      }
    }
  },
  "/api/cdn": {
    "get": {
      "summary": "CDN API Information",
      "description": "Get information about available CDN providers (Tmpfiles & Uguu)",
      "tags": ["CDN Services"],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "CDN Upload API - Tmpfiles & Uguu"
                  },
                  "providers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "tmpfiles"
                        },
                        "description": {
                          "type": "string", 
                          "example": "Temporary file hosting with 1 hour expiration"
                        },
                        "maxFileSize": {
                          "type": "string",
                          "example": "50MB"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["1 hour expiration", "Any file type", "Fast upload"]
                        }
                      }
                    }
                  },
                  "priority": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["tmpfiles", "uguu", "catbox"]
                  }
                }
              },
              "example": {
                "status": true,
                "message": "CDN Upload API - Tmpfiles & Uguu",
                "providers": [
                  {
                    "name": "tmpfiles",
                    "description": "Temporary file hosting with 1 hour expiration",
                    "maxFileSize": "50MB",
                    "features": ["1 hour expiration", "Any file type", "Fast upload"]
                  },
                  {
                    "name": "uguu",
                    "description": "Simple file sharing with 1 hour expiration", 
                    "maxFileSize": "50MB",
                    "features": ["1 hour expiration", "Any file type", "Simple API"]
                  },
                  {
                    "name": "catbox",
                    "description": "Permanent file storage",
                    "maxFileSize": "50MB",
                    "features": ["Permanent storage", "Any file type", "Reliable"]
                  }
                ],
                "priority": ["tmpfiles", "uguu", "catbox"]
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Upload File to CDN",
      "description": "Upload file to CDN (Tmpfiles -> Uguu -> Catbox) and get public URL",
      "tags": ["CDN Services"],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary",
                  "description": "File to upload (max 50MB)"
                }
              },
              "required": ["file"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success", 
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "File uploaded successfully to tmpfiles.org"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "example": "image.jpg"
                      },
                      "size": {
                        "type": "number",
                        "example": 1024000
                      },
                      "mimetype": {
                        "type": "string",
                        "example": "image/jpeg"
                      },
                      "url": {
                        "type": "string", 
                        "example": "https://tmpfiles.org/123456/image.jpg"
                      },
                      "download_url": {
                        "type": "string",
                        "example": "https://tmpfiles.org/dl/123456/image.jpg"
                      },
                      "provider": {
                        "type": "string",
                        "example": "tmpfiles.org"
                      },
                      "expires": {
                        "type": "string",
                        "example": "1 hour"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
                                      
  
  "/api/downloader/tiktok": {
    "get": {
      "summary": "TikTok Downloader",
      "description": "Download video atau slideshow dari TikTok",
      "tags": ["Downloader Sosmed"],
      "parameters": [
        {
          "name": "url",
          "in": "query",
          "description": "URL TikTok yang akan didownload",
          "required": true,
          "schema": {
            "type": "string",
            "example": "https://vt.tiktok.com/ZSjXNEnbC/"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "original_url": {
                        "type": "string",
                        "example": "https://vt.tiktok.com/ZSjXNEnbC/"
                      },
                      "type": {
                        "type": "string",
                        "example": "video"
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["https://example.com/video.mp4"]
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Video Title"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://example.com/thumb.jpg"
                          },
                          "creator": {
                            "type": "string",
                            "example": "username"
                          }
                        }
                      }
                    }
                  },
                  "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": false
                  },
                  "message": {
                    "type": "string",
                    "example": "URL parameter is required"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": false
                  },
                  "message": {
                    "type": "string",
                    "example": "Failed to process TikTok URL"
                  }
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "TikTok Downloader (POST)",
      "description": "Download video atau slideshow dari TikTok menggunakan POST",
      "tags": ["Downloader Sosmed"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL TikTok yang akan didownload",
                  "example": "https://vt.tiktok.com/ZSjXNEnbC/"
                }
              },
              "required": ["url"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object"
                  },
                  "timestamp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
    
  "/api/anime/indo": {
    "get": {
      "summary": "Anime Indo Scraper",
      "description": "Scrape anime data from anime-indo.lol",
      "tags": ["Anime"],
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["home", "genre", "movie", "jadwal", "search", "detail"]
          },
          "description": "Action to perform",
          "example": "home"
        },
        {
          "name": "query",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search query (required for search action)",
          "example": "one piece"
        },
        {
          "name": "genre",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Genre name (for genre action)",
          "example": "action"
        },
        {
          "name": "url",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "format": "url"
          },
          "description": "Anime URL (required for detail action)",
          "example": "https://anime-indo.lol/anime/one-piece/"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "/api/anime/nontonanime": {
    "get": {
      "summary": "NontonAnimeID Scraper",
      "description": "Scrape anime data from NontonAnimeID website",
      "tags": ["Anime"],
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["home", "search", "detail", "download"]
          },
          "description": "Action to perform",
          "example": "search"
        },
        {
          "name": "query",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Search query (required for search action)",
          "example": "one piece"
        },
        {
          "name": "url",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "format": "url"
          },
          "description": "Anime URL (required for detail and download actions)",
          "example": "https://s7.nontonanimeid.boats/fumetsu-no-anata-e-season-3-episode-1/"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "/api/ngl/spam": {
    "get": {
      "summary": "NGL Spam Tools",
      "description": "Tools untuk spam NGL (Send Anonymous Messages)",
      "tags": ["Spam Tools"],
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["info", "check", "spam"]
          },
          "description": "Action type",
          "example": "info"
        },
        {
          "name": "link",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "NGL link (https://ngl.link/username)",
          "example": "https://ngl.link/exampleuser"
        },
        {
          "name": "message",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Message to send",
          "example": "Hello from API"
        },
        {
          "name": "count",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50
          },
          "description": "Number of messages to send",
          "example": 3
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "examples": {
                "info": {
                  "summary": "API Information",
                  "value": {
                    "status": true,
                    "creator": "DinzID",
                    "service": "NGL Spam API",
                    "endpoints": {
                      "post_spam": "POST /api/ngl/spam",
                      "get_quick": "GET /api/ngl/spam?action=spam",
                      "check": "GET /api/ngl/spam?action=check",
                      "info": "GET /api/ngl/spam?action=info"
                    }
                  }
                },
                "check": {
                  "summary": "Link Check",
                  "value": {
                    "status": true,
                    "valid": true,
                    "username": "exampleuser",
                    "checked_at": "2024-01-01T00:00:00.000Z"
                  }
                },
                "spam": {
                  "summary": "Spam Result",
                  "value": {
                    "status": true,
                    "creator": "DinzID",
                    "result": {
                      "username": "exampleuser",
                      "message": "Hello from API",
                      "total_attempts": 3,
                      "success": 3,
                      "failed": 0,
                      "success_rate": "100.0%",
                      "final_message": "Selesai mengirim 3 pesan ke exampleuser"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Spam NGL via POST",
      "description": "Send multiple anonymous messages to NGL link",
      "tags": ["Spam Tools"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "link": {
                  "type": "string",
                  "description": "NGL link",
                  "example": "https://ngl.link/exampleuser"
                },
                "message": {
                  "type": "string",
                  "description": "Message to send",
                  "example": "Hello from API"
                },
                "count": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 50,
                  "description": "Number of messages",
                  "example": 3
                }
              },
              "required": ["link", "message", "count"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "example": {
                "status": true,
                "creator": "DinzID",
                "result": {
                  "username": "exampleuser",
                  "message": "Hello from API",
                  "total_attempts": 3,
                  "success": 3,
                  "failed": 0,
                  "success_rate": "100.0%",
                  "final_message": "Selesai mengirim 3 pesan ke exampleuser"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        }
      }
    }
  },
    "/api/stalker/ttstalk": {
      "get": {
        "summary": "TikTok Stalker",
        "description": "tiktok stalker with username",
        "tags": [
          "Stalker Sosial Media"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Try Input Username Tiktok",
            "required": false,
            "schema": {
              "type": "string",
              "example": "iqstore78"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "parameter format not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/stalker/npmstalk": {
      "post": {
        "summary": "NPM Stalker",
        "description": "Try Input Package Name",
        "tags": [
          "Stalker Sosial Media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Try Input Package Name",
                    "example": "axios"
                  }
                },
                "required": ["text"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "parameter format not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/stalker/igstalk": {
      "post": {
        "summary": "Instagram Stalker",
        "description": "instagram stalker with username",
        "tags": [
          "Stalker Sosial Media"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Try Input Username Instagram",
                    "example": "iqstore78"
                  }
                },
                "required": ["username"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "parameter format not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/say": {
      "get": {
        "summary": "Test Server",
        "description": "test server",
        "tags": [
          "Testings Developer"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Try Say Hello World",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Hello World!"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "parameter format not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NanoBananaResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Status keberhasilan request"
          },
          "result": {
            "type": "string",
            "description": "URL hasil edit gambar"
          },
          "originalUpload": {
            "type": "string",
            "description": "URL upload original (hanya untuk POST)"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Pesan error"
          }
        }
      }
    }
  }
}
